---
- name: Override config.txt location for Raspberry Pi OS version before bookworm
  ansible.builtin.set_fact:
    rpi_wifi_usb_config_dir: /boot
  when: ansible_distribution_major_version | int < 12

- name: Mount boot
  ansible.posix.mount:
    path: "{{ rpi_wifi_usb_config_dir }}"
    state: mounted
    src: "{{ raspberry_pi_boot_dev }}"
    fstype: vfat
  changed_when: false
  become: true
  become_user: root

- name: Enable usb driver in config.txt
  ansible.builtin.lineinfile:
    path: "{{ rpi_wifi_usb_config_dir }}/config.txt"
    regexp: "^dtoverlay=dwc2"
    line: dtoverlay=dwc2
  notify: Reboot required
  become: true
  become_user: root

- name: Automatically load module
  ansible.builtin.lineinfile:
    path: /etc/modules
    regexp: "^dwc2"
    line: dwc2
  notify: Reboot required
  become: true
  become_user: root

- name: "Check if file exists: {{ rpi_wifi_usb_share_file }}"
  ansible.builtin.stat:
    path: "{{ rpi_wifi_usb_share_file }}"
  register: share_file_check

- name: "Create the file with size {{ rpi_wifi_usb_share_space }}"
  ansible.builtin.command: fallocate -l {{ rpi_wifi_usb_share_space }} {{ rpi_wifi_usb_share_file }}
  when: not share_file_check.stat.exists
  changed_when: true
  become: true
  become_user: root

- name: "Format the file to fat32: {{ rpi_wifi_usb_share_file }}"
  ansible.builtin.command: mkdosfs {{ rpi_wifi_usb_share_file }} -F 32 -I -n WIFI-USB
  when: not share_file_check.stat.exists
  changed_when: true
  become: true
  become_user: root

- name: "Ensure mount {{ rpi_wifi_usb_share_file }}"
  ansible.posix.mount:
    path: "{{ rpi_wifi_usb_share_path }}"
    src: "{{ rpi_wifi_usb_share_file }}"
    fstype: vfat
    opts: users,umask=000
    state: mounted
  become: true
  become_user: root

- name: Ensure python3 is fully installed
  ansible.builtin.package:
    name:
      - python3-full
      - python3-virtualenv
    state: present
  become: true
  become_user: root

- name: Install watchdog python library
  ansible.builtin.pip:
    name: watchdog
    virtualenv: "{{ rpi_wifi_usb_share_watchdog_path }}/venv"
  notify: Restart usb watchdog
  become: true
  become_user: root

- name: Ensuring watchdog folder
  ansible.builtin.file:
    state: directory
    path: "{{ rpi_wifi_usb_share_watchdog_path }}"
    owner: root
    group: root
    mode: "0755"
  notify: Restart usb watchdog
  become: true
  become_user: root

- name: Deploy watchdog script
  ansible.builtin.template:
    src: usb_share_watchdog.py.jinja2
    dest: "{{ rpi_wifi_usb_share_watchdog_path }}/usb_share_watchdog.py"
    owner: root
    group: root
    mode: "0755"
  notify: Restart usb watchdog
  become: true
  become_user: root

- name: Deploy watchdog systemd service unit
  ansible.builtin.template:
    src: usb_share_watchdog.service.jinja2
    dest: /etc/systemd/system/usb_share_watchdog.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Reload systemd
    - Restart usb watchdog
  become: true
  become_user: root
